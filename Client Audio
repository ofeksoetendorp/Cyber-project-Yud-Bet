import pyaudio
import wave
import cv2
import io
import socket
import struct
import time
import pickle
import zlib
chunk = 1024  # Record in chunks of 1024 samples
sample_format = pyaudio.paInt16  # 16 bits per sample
channels = 2
fs = 44100  # Record at 44100 samples per second

p = pyaudio.PyAudio()  # Create an interface to PortAudio
client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
client_socket.connect(('10.0.0.17', 8485))
connection = client_socket.makefile('wb')
print('Recording')

stream = p.open(format=sample_format,
                channels=channels,
                rate=fs,
                frames_per_buffer=chunk,
                input=True)
#stream2 = p.open(format=sample_format,
               # channels=channels,
                #rate=fs,
                #frames_per_buffer=chunk,
                 #   output=True)
"""
frames = []  # Initialize array to store frames

# Store data in chunks for 3 seconds
for i in range(0, int(fs / chunk * seconds)):
    data = stream.read(chunk)
    frames.append(data)
    print(data)
"""
while True:
#    data = zlib.compress(pickle.dumps(frame, 0))
    data = stream.read(chunk)
    size = len(data)
    #stream2.write(data)
    print(size)
    client_socket.sendall(struct.pack(">L", size)+data)
# Stop and close the stream
stream.stop_stream()
stream.close()
# Terminate the PortAudio interface
p.terminate()




